# Generated by Django 3.2.24 on 2024-02-23 14:46

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('game', '0055_alter_roomsmodel_expires'),
    ]

    operations = [
        migrations.CreateModel(
            name='TournamentMatchModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('p1_score', models.IntegerField(default=0)),
                ('p2_score', models.IntegerField(default=0)),
                ('round_number', models.IntegerField(blank=True, help_text='The tournament round for this match', null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='playersmodel',
            name='ratio',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='tournamentmodel',
            name='eliminated',
            field=models.ManyToManyField(related_name='eliminated', to='game.PlayersModel'),
        ),
        migrations.AddField(
            model_name='tournamentmodel',
            name='round',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='tournamentmodel',
            name='waitlist',
            field=models.ManyToManyField(related_name='waitlisted', to='game.PlayersModel'),
        ),
        migrations.AlterField(
            model_name='roomsmodel',
            name='expires',
            field=models.DateTimeField(default=datetime.datetime(2024, 2, 23, 15, 1, 6, 273916, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='tournamentmodel',
            name='participants',
            field=models.ManyToManyField(related_name='participating', to='game.PlayersModel'),
        ),
        migrations.DeleteModel(
            name='TournamentRoomModel',
        ),
        migrations.AddField(
            model_name='tournamentmatchmodel',
            name='player1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_results_as_player1', to='game.playersmodel'),
        ),
        migrations.AddField(
            model_name='tournamentmatchmodel',
            name='player2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_results_as_player2', to='game.playersmodel'),
        ),
        migrations.AddField(
            model_name='tournamentmatchmodel',
            name='room',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tournament_result', to='game.roomsmodel'),
        ),
        migrations.AddField(
            model_name='tournamentmatchmodel',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='game.tournamentmodel'),
        ),
        migrations.AddField(
            model_name='tournamentmatchmodel',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_match_results', to='game.playersmodel'),
        ),
    ]
