# Generated by Django 3.2.25 on 2024-03-12 14:05

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PlayersModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('login', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('secret_2fa', models.TextField(blank=True, default='')),
                ('email', models.EmailField(blank=True, default='', max_length=254)),
                ('session_id', models.CharField(blank=True, max_length=40, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('elo', models.IntegerField(default=1500)),
            ],
        ),
        migrations.CreateModel(
            name='RoomsModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('game', models.CharField(max_length=20)),
                ('expires', models.DateTimeField(default=datetime.datetime(2024, 3, 12, 14, 20, 14, 452760, tzinfo=utc))),
                ('started', models.BooleanField(default=False)),
                ('x', models.IntegerField(blank=True, null=True)),
                ('y', models.IntegerField(blank=True, null=True)),
                ('score0', models.IntegerField(default=0)),
                ('score1', models.IntegerField(default=0)),
                ('tournamentRoom', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='own', to='game.playersmodel')),
                ('server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='serve', to='game.playersmodel')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('game', models.CharField(max_length=20)),
                ('round', models.IntegerField(default=1)),
                ('active_matches', models.IntegerField(default=0)),
                ('total_matches', models.IntegerField(default=0)),
                ('final', models.BooleanField(default=False)),
                ('terminated', models.BooleanField(default=False)),
                ('eliminated', models.ManyToManyField(related_name='eliminated', to='game.PlayersModel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_tournament', to='game.playersmodel')),
                ('participants', models.ManyToManyField(related_name='participating', to='game.PlayersModel')),
                ('waitlist', models.ManyToManyField(related_name='waitlisted', to='game.PlayersModel')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='won_tournament', to='game.playersmodel')),
            ],
        ),
        migrations.CreateModel(
            name='TournamentMatchModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('p1_score', models.IntegerField(default=0)),
                ('p2_score', models.IntegerField(default=0)),
                ('round_number', models.IntegerField(blank=True, help_text='The tournament round for this match', null=True)),
                ('match_number', models.IntegerField(blank=True, help_text='The tournament match number', null=True)),
                ('status', models.CharField(default='Waiting for players to join', max_length=255)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('player1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_player1', to='game.playersmodel')),
                ('player2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_player2', to='game.playersmodel')),
                ('room', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tournament_room', to='game.roomsmodel')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tournament', to='game.tournamentmodel')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_match_results', to='game.playersmodel')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerRoomModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('side', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('x', models.IntegerField(blank=True, null=True)),
                ('y', models.IntegerField(blank=True, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.playersmodel')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.roomsmodel')),
            ],
        ),
    ]
